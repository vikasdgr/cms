services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html
    ports:
      - "8000:80"
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_DATABASE=cms
      - DB_USERNAME=laravel_user
      - DB_PASSWORD=secret
      - APP_ENV=local
      - APP_DEBUG=true
    restart: unless-stopped
  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: cms
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: root_secret
    ports:
      - "3306:3306"
    volumes:
      # Persist MySQL data on the host so data survives container recreation.
      # This maps the host folder d:/RSSB/cms/docker/mysql to MySQL data directory.
      # - ./docker/mysql:/var/lib/mysql
      # Alternatively you can use a named volume:
      - db_data:/var/lib/mysql
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    depends_on:
      - db
    restart: unless-stopped
  node:
    build:
      context: .
      dockerfile: Dockerfile.node
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - node_modules:/var/www/html/node_modules
    ports:
      - "5173:5173"
    restart: unless-stopped
    environment:
      - NODE_ENV=development
volumes:
  db_data:
    driver: local
  node_modules:
    driver: local
